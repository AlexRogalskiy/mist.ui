{
  "type": "object",
  "id": "create-machine-form",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Create machine form",
  "submitButtonLabel": "Launch",
  "canClose": false,
  "additionalProperties": false,
  "properties": {
    "cloudContainer": {
      "name": "cloudContainer",
      "label": "",
      "id": "cloud_container",
      "type": "object",
      "format": "subformContainer",
      "properties": {
        "subform": {
          "$ref": "#/definitions/cloudSubform"
        }
      }
    },
    "setupMachineContainer": {
      "name": "setupMachine",
      "label": "Machine Setup",
      "id": "setup_machine_container",
      "type": "object",
      "format": "subformContainer",
      "hasToggle": false,
      "hidden": true,
      "deps": [
        {
          "prop": "hidden",
          "func": "showSetupMachineContainer",
          "dependsOn": "cloudContainer.cloud"
        }
      ],
      "properties": {
        "subform": {
          "$ref": "#/definitions/setupMachineSubform"
        }
      }
    },
    "mistFieldsContainer": {
      "name": "mist_fields_Container",
      "label": "",
      "id": "mist_fields_container",
      "type": "object",
      "format": "subformContainer",
      "classes": "stacked",
      "properties": {
        "subform": {
          "$ref": "#/definitions/mistFieldsSubform"
        }
      },
      "deps": [
        {
          "prop": "hidden",
          "func": "showSetupMachineContainer",
          "dependsOn": "cloudContainer.cloud"
        }
      ]
    }
  },
  "definitions": {
    "cloudSubform": {
      "id": "cloud_subform",
      "type": "object",
      "format": "subform",
      "properties": {
        "name": {
          "name": "name",
          "label": "Machine Name",
          "type": "string",
          "required": true,
          "charCounter": true,
          "helptext": "Fill in the machine's name",
          "minlength": 1,
          "maxlength": 9,
          "styles": {
            "outer": {
              "flexBasis": "100%"
            }
          },
          "deps": [
            {
              "func": "getNameRegex",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "cloud": {
          "label": "Cloud",
          "id": "cloud",
          "type": "string",
          "format": "dropdown",
          "x-mist-enum": "clouds"
        }
      }
    },
    "setupMachineSubform": {
      "id": "setup_machine_subform",
      "type": "object",
      "format": "subform",
      "properties": {
        "quantity": {
          "name": "quantity",
          "label": "Quantity",
          "type": "string",
          "format": "number",
          "value": 1,
          "minimum": 1,
          "maximum": 100,
          "styles": {
            "outer": {
              "flexBasis": "100%"
            }
          },
          "deps": [
            {
              "prop": "hidden",
              "func": "showQuantity",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "location": {
          "name": "location",
          "id": "location",
          "label": "Location",
          "type": "string",
          "format": "dropdown",
          "styles": {
            "outer": {
              "flexBasis": "100%"
            }
          },
          "deps": [
            {
              "prop": "enum",
              "func": "getLocationsFromCloud",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "image": {
          "name": "image",
          "label": "Image",
          "type": "string",
          "format": "dropdown",
          "required": true,
          "searchable": true,
          "styles": {
            "outer": {
              "flexBasis": "100%"
            }
          },
          "deps": [
            {
              "prop": "enum",
              "func": "getImagesFromCloud",
              "dependsOn": "cloudContainer.cloud"
            },
            {
              "prop": "enum",
              "func": "getImagesFromLocation",
              "dependsOn": ".location"
            },
            {
              "prop": "enum",
              "func": "getImagesFromSize",
              "dependsOn": ".size"
            }
          ]
        },
        "size": {
          "label": "Size",
          "name": "size",
          "id": "size",
          "type": "string",
          "deps": [
            {
              "prop": "field",
              "func": "getSizesFromCloud",
              "dependsOn": "cloudContainer.cloud"
            },
            {
              "prop": "enum",
              "func": "getSizesFromLocation",
              "dependsOn": ".location"
            }
          ],
          "format": "mistSizeField",
          "styles": {
            "outer": {
              "flexBasis": "100%"
            }
          }
        },
        "networkContainer": {
          "name": "net",
          "label": "Network",
          "id": "network_container",
          "type": "object",
          "format": "subformContainer",
          "hasToggle": false,
          "hidden": true,
          "deps": [
            {
              "prop": "hidden",
              "func": "showNetworkContainer",
              "dependsOn": "cloudContainer.cloud"
            }
          ],
          "properties": {
            "subform": {
              "$ref": "#/definitions/networkSubform"
            }
          }
        },
      }
    },
    "networkSubform": {
      "id": "network_subform",
      "type": "object",
      "format": "subform",
      "properties": {
        "security_group": {
          "type": "string",
          "format": "dropdown",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotAmazon",
              "dependsOn": "cloudContainer.cloud"
            },
            {
              "prop": "enum",
              "func": "getAmazonSecurityGroups",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "network": {
          "type": "string",
          "name": "network",
          "format": "dropdown",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotAzure",
              "dependsOn": "cloudContainer.cloud"
            },
            {
              "prop": "enum",
              "func": "getAzureNetworks",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "subnet": {
          "type": "string",
          "format": "dropdown",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotAmazon",
              "dependsOn": "cloudContainer.cloud"
            },
            {
              "prop": "enum",
              "func": "getAmazonSubnets",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "googleNetwork": {
          "type": "string",
          "name": "network",
          "format": "dropdown",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotGoogle",
              "dependsOn": "cloudContainer.cloud"
            },
            {
              "prop": "enum",
              "func": "getGoogleNetworks",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "subnetwork": {
          "type": "string",
          "format": "dropdown",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotGoogle",
              "dependsOn": "cloudContainer.cloud"
            },
            {
              "prop": "enum",
              "func": "getGoogleSubnetworks",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "private_ip": {
          "type": "boolean",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotLinode",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        }
      }
    },
    "attachVolumeSubform": {
      "id": "attach_volume_subform",
      "type": "object",
      "format": "subform",
      "properties": {
        "tabs": {
          "name": "tabs",
          "id": "attach_volume",
          "type": "string",
          "format": "radioGroup",
          "hideHeader": true,
          "value": "Create new volume",
          "enum": [
            "Create new volume",
            "Attach existing volume"
          ]
        },
        "attachNewVolumeContainer": {
          "name": "attachNewVolumeContainer",
          "id": "attach_new_volume_container",
          "type": "object",
          "format": "multiRow",
          "hidden": true,
          "hideHeader": true,
          "hasToggle": false,
          "numbered": true,
          "properties": {
            "subform": {
              "$ref": "#/definitions/attachNewVolumeRow"
            }
          },
          "deps": [
            {
              "prop": "hidden",
              "func": "hideAttachNewVolumeContainer",
              "dependsOn": ".tabs"
            }
          ]
        },
        "attachExistingVolumeContainer": {
          "name": "attachExistingVolumeContainer",
          "id": "attach_existing_volume_container",
          "type": "object",
          "format": "multiRow",
          "hidden": true,
          "hideHeader": true,
          "hasToggle": false,
          "numbered": true,
          "properties": {
            "subform": {
              "$ref": "#/definitions/attachExistingVolumeRow"
            }
          },
          "deps": [
            {
              "prop": "hidden",
              "func": "hideAttachExistingVolumeContainer",
              "dependsOn": ".tabs"
            }
          ]
        }
      }
    },
    "attachExistingVolumeRow": {
      "id": "attach_existing_volume_subform",
      "type": "object",
      "format": "rowDefinition",
      "properties": {
        "volume": {
          "id": "volume",
          "type": "string",
          "label": "Existing Volume",
          "format": "dropdown",
          "deps": [
            {
              "prop": "enum",
              "func": "getVolumesFromLocations",
              "dependsOn": "setupMachine.location"
            }
          ]
        },
        "device": {
          "type": "string",
          "label": "Device name",
          "value": "/dev/sdf",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotAmazon",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "boot": {
          "type": "boolean",
          "label": "Boot drive",
          "deps": [
            {
              "prop": "hidden",
              "func": "showVolumeBoot",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "persist_across_boots": {
          "type": "boolean",
          "label": "Persist across boots",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotLinode",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "delete_on_termination_2": {
          "type": "boolean",
          "label": "Delete on termination in existing",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotOpenstack",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        }
      }
    },

    "attachNewVolumeRow": {
      "id": "create_new_volume_subform",
      "type": "object",
      "format": "rowDefinition",
      "properties": {
        "name": {
          "type": "string",
          "label": "Device name",
          "value": "/dev/sdf",
          "deps": [
            {
              "prop": "hidden",
              "func": "showDeviceNameInNewVolume",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "size": {
          "type": "string",
          "format": "number",
          "label": "Size of the volume in GBs"
        },
        "volume_type": {
          "type": "string",
          "format": "dropdown",
          "label": "Volume type",
          "enum": [
            "gp2",
            "io1",
            "st1",
            "sc1",
            "standard"
          ],
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotAmazon",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "iops": {
          "type": "string",
          "format": "number",
          "label": "Number of I/O operations per second",
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotAmazon",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "delete_on_termination": {
          "type": "boolean",
          "label": "Delete on termination in new",
          "deps": [
            {
              "prop": "hidden",
              "func": "showDeleteTerminationInNewVolume",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "caching_type": {
          "type": "string",
          "label": "Caching type",
          "format": "dropdown",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite"
          ],
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotAzure",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "storage_account_type": {
          "type": "string",
          "label": "Storage account type",
          "format": "dropdown",
          "enum": [
            "Premium_LRS",
            "Premium_ZRS",
            "StandardSSD_LRS",
            "StandardSSD_ZRS",
            "Standard_LRS",
            "UltraSSD_LRS"
          ],
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotAzure",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "filesystem_type": {
          "type": "string",
          "label": "Filesystem type",
          "format": "dropdown",
          "enum": [
            "ext4",
            "xfs"
          ],
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotDigitalOcean",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "plan": {
          "type": "string",
          "label": "Plan",
          "format": "dropdown",
          "enum": [
            "standard",
            "performance"
          ],
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotEquinix",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "boot": {
          "type": "boolean",
          "label": "Boot drive",
          "deps": [
            {
              "prop": "hidden",
              "func": "showVolumeBoot",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "type": {
          "type": "string",
          "label": "Type",
          "format": "dropdown",
          "enum": [
            "pd-standard",
            "pd-ssd"
          ],
          "deps": [
            {
              "prop": "hidden",
              "func": "hideIfNotGoogle",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        }
      }
    },

    "setExpirationSubform": {
      "id": "set_expiration_subform",
      "type": "object",
      "format": "subform",
      "properties": {
        "action": {
          "id": "action",
          "type": "string",
          "format": "dropdown",
          "deps": [
            {
              "prop": "enum",
              "func": "getActions",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "in": {
          "name": "in",
          "id": "in",
          "label": "in",
          "type": "string",
          "format": "durationField"
        },
        "notify": {
          "label": "Notify me",
          "name": "notify",
          "id": "notify",
          "value": true,
          "type": "boolean",
          "noLabelFloat": true
        },
        "before": {
          "name": "before",
          "id": "before",
          "label": "before",
          "type": "string",
          "format": "durationField"
        }
      }
    },
    "postDeployInlineScript": {
      "id": "post_deploy_inline_script",
      "type": "object",
      "format": "subform",
      "properties": {
        "inlineScript": {
          "label": "Inline Script",
          "id": "inline_script",
          "type": "string"
        }
      }
    },
    "postDeploySelectExisting": {
      "id": "post_deploy_select_existing",
      "type": "object",
      "format": "subform",
      "properties": {
        "script": {
          "label": "Script",
          "id": "post_deploy_script",
          "type": "string",
          "format": "dropdown",
          "x-mist-enum": "getScripts"
        },
        "optionalScriptParams": {
          "label": "Optional Script Params",
          "id": "optional_script_params",
          "type": "string"
        }
      }
    },
    "scheduleTaskSubform": {
      "id": "schedule_task_subform",
      "type": "object",
      "format": "subform",
      "properties": {
        "scheduleTask": {
          "label": "Schedule Task",
          "id": "schedule_task",
          "type": "string",
          "format": "dropdown",
          "x-mist-enum": "getTasks"
        },
        "scheduleTaskTabs": {
          "name": "scheduleTaskTabs",
          "id": "schedule_task_tabs",
          "type": "object",
          "format": "tabs",
          "properties": {
            "tabs": {
              "enum": [
                {
                  "label": "Once",
                  "$ref": "#/definitions/scheduleTaskOnce"
                },
                {
                  "label": "Repeat",
                  "$ref": "#/definitions/scheduleTaskRepeat"
                },
                {
                  "label": "Crontab",
                  "$ref": "#/definitions/scheduleTaskCrontab"
                }
              ]
            }
          }
        }
      }
    },
    "scheduleTaskOnce": {
      "id": "schedule_task_once",
      "type": "object",
      "format": "subform",
      "properties": {
        "once": {
          "label": "",
          "id": "once",
          "type": "string",
          "format": "datetimePicker"
        }
      }
    },
    "scheduleTaskRepeat": {
      "id": "schedule_task_repeat",
      "type": "object",
      "format": "subform",
      "properties": {
        "repeat": {
          "label": "Repeat",
          "id": "repeat",
          "type": "string",
          "format": "durationField"
        },
        "extraTaskOptionsContainer": {
          "id": "extra_task_options_container",
          "type": "object",
          "format": "subformContainer",
          "properties": {
            "subform": {
              "$ref": "#/definitions/extraTaskOptions"
            }
          }
        }
      }
    },
    "scheduleTaskCrontab": {
      "id": "schedule_task_crontab",
      "type": "object",
      "format": "subform",
      "properties": {
        "repeat": {
          "label": "Crontab",
          "id": "crontab",
          "type": "string"
        }
      }
    },
    "extraTaskOptions": {
      "id": "extra_task_options",
      "type": "object",
      "format": "subform",
      "properties": {
        "startsNow": {
          "label": "Starts now",
          "id": "starts_now",
          "type": "string",
          "format": "datetimePicker"
        },
        "expiresNever": {
          "label": "Expires never",
          "id": "expires_never",
          "type": "string",
          "format": "datetimePicker"
        },
        "maximumRunCount": {
          "label": "Maximum Run Count",
          "id": "maximum_run_count",
          "type": "string",
          "format": "datetimePicker"
        }
      }
    },
    "createDNSRecordSubform": {
      "id": "create_dns_subform",
      "type": "object",
      "format": "subform",
      "properties": {
        "recordName": {
          "label": "Record name",
          "name": "recordName",
          "id": "record_name",
          "type": "string"
        },
        "dnsZone": {
          "label": "DNS zone",
          "name": "dnsZone",
          "id": "dns_zone",
          "type": "string",
          "format": "dropdown",
          "x-mist-enum": "getZones"
        }
      }
    },
    "mistFieldsSubform": {
      "id": "mist_fields_subform",
      "type": "object",
      "format": "subform",
      "properties": {
        "attachVolumeContainer": {
          "name": "attachVolumeContainer",
          "label": "Attach volume",
          "id": "attachVolume_container",
          "type": "object",
          "format": "subformContainer",
          "hasToggle": true,
          "properties": {
            "subform": {
              "$ref": "#/definitions/attachVolumeSubform"
            }
          },
          "deps": [
            {
              "prop": "hidden",
              "func": "showVolumeContainer",
              "dependsOn": "cloudContainer.cloud"
            }
          ]
        },
        "setExpirationContainer": {
          "name": "setExpirationContainer",
          "label": "Set expiration",
          "id": "setExpiration_container",
          "type": "object",
          "format": "subformContainer",
          "hasToggle": true,
          "properties": {
            "subform": {
              "$ref": "#/definitions/setExpirationSubform"
            }
          }
        },
        "postDeployScriptContainer": {
          "name": "postDeployScriptContainer",
          "label": "Run post-deploy script",
          "id": "postDeployScript_container",
          "type": "object",
          "format": "subformContainer",
          "hasToggle": true,
          "properties": {
            "tabs": {
              "enum": [
                {
                  "label": "Inline Script",
                  "$ref": "#/definitions/postDeployInlineScript"
                },
                {
                  "label": "Select Existing",
                  "$ref": "#/definitions/postDeploySelectExisting"
                }
              ]
            }
          }
        },
        "scheduleTaskContainer": {
          "name": "scheduleTaskContainer",
          "label": "Schedule a task",
          "id": "scheduleTask_container",
          "type": "object",
          "format": "subformContainer",
          "hasToggle": true,
          "properties": {
            "subform": {
              "$ref": "#/definitions/scheduleTaskSubform"
            }
          }
        },
        "fqdn": {
          "name": "createDNSRecordContainer",
          "label": "Create DNS record",
          "id": "createDNSRecord_container",
          "type": "object",
          "format": "subformContainer",
          "hasToggle": true,
          "properties": {
            "subform": {
              "$ref": "#/definitions/createDNSRecordSubform"
            }
          }
        },
        "cloudInit": {
          "label": "Run this Cloud Init script on first boot",
          "type": "string"
        },
        "enableMonitoring": {
          "label": "Enable Monitoring",
          "name": "enableMonitoring",
          "id": "enable_monitoring",
          "value": false,
          "type": "boolean"
        },
        "save": {
          "label": "Save provisioning plan as template",
          "id": "save_plan",
          "value": false,
          "type": "boolean"
        }
      }
    }
  }
}